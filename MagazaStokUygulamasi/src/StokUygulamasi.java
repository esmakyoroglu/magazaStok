import java.util.Date;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class StokUygulamasi extends javax.swing.JFrame {

    /**
     * Creates new form StokUygulamasi
     */
    public StokUygulamasi() {
        initComponents();
        getConnetion();
        urunleri_tabloya_aktar();
    }
//mysql bağlantısı, veritabanı    
Connection getConnetion(){
        try {
            Connection cn=null;
            cn=DriverManager.getConnection("jdbc:mysql://localhost/stokuygulamasi?useUnicode=true&characterEncoding=utf8", "root", "");
            //System.out.println("veritabanı bağlantısı başarılı bir şekilde sağlandı");
            return cn;
        } catch (SQLException ex) {
            System.out.println("veritabanı bağlantısı başarısız");
            Logger.getLogger(StokUygulamasi.class.getName()).log(Level.SEVERE, null, ex);
                return null;
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        urun_kodu = new javax.swing.JTextField();
        stok_miktari = new javax.swing.JTextField();
        urun_alis_fiyati = new javax.swing.JTextField();
        urun_adi = new javax.swing.JTextField();
        urun_alis_tarihi = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stok Uygulaması");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Ürün Kodu:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Stok Miktarı:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Ürün Adı:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Ürün Alış Fiyatı:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Ürün Alış Tarihi:");

        urun_kodu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        urun_kodu.setEnabled(false);
        urun_kodu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urun_koduActionPerformed(evt);
            }
        });

        stok_miktari.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        urun_alis_fiyati.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        urun_adi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        urun_alis_tarihi.setDateFormatString("dd-MM-yyyy");
        urun_alis_tarihi.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ürün Kodu", "Stok Miktarı (Adet)", "Ürün Adı", "Ürün Alış Fiyatı (Birim Fiyat-TL)", "Ürün Alış Tarihi"
            }
        ));
        tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablo);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Ürün Ekle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Ürün Güncelle");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Ürün Sil");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("Çıkış Yap");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(urun_kodu, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(urun_adi, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(urun_alis_fiyati)
                                    .addComponent(urun_alis_tarihi, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(stok_miktari, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 882, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(urun_kodu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(stok_miktari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(urun_adi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(urun_alis_fiyati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(urun_alis_tarihi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(36, 36, 36)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void urun_koduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urun_koduActionPerformed
        
    }//GEN-LAST:event_urun_koduActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(kontrolEt()){
            try {
                Connection con=getConnetion();
//sql kodu                
        PreparedStatement ps=con.prepareStatement("INSERT INTO stok(stok_miktari, urun_adi, urun_alis_fiyati, urun_alis_tarihi) values (?,?,?,?) ");
            ps.setString(1, stok_miktari.getText());
            ps.setString(2, urun_adi.getText());
            ps.setString(3, urun_alis_fiyati.getText());
                SimpleDateFormat dateFormat=new SimpleDateFormat("dd-MM-yyyy");
        String tarih=dateFormat.format(urun_alis_tarihi.getDate());
            ps.setString(4, tarih);
            //verileri güncelleme
            ps.executeUpdate();
            urunleri_tabloya_aktar();
        JOptionPane.showMessageDialog(null, "Ürün Eklendi");
               //yazılan metinleri temizleme
              stok_miktari.setText("");
              urun_adi.setText("");
              urun_alis_fiyati.setText("");
              //ekleme işlemi başarısız olduğunda 
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Boş değer girilemez");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Connection con=getConnetion();
        PreparedStatement ps=con.prepareStatement("Update stok SET stok_miktari=?, urun_adi=?, urun_alis_fiyati=?, urun_alis_tarihi=? WHERE urun_kodu=?");
            ps.setString(1, stok_miktari.getText());
            ps.setString(2, urun_adi.getText());
            ps.setString(3, urun_alis_fiyati.getText());
                SimpleDateFormat dateFormat= new SimpleDateFormat("dd-MM-yyyy");
        String tarih =dateFormat.format(urun_alis_tarihi.getDate());
            ps.setString(4, tarih);
            ps.setInt(5, Integer.valueOf(urun_kodu.getText()));
            ps.executeUpdate();
            urunleri_tabloya_aktar();
       JOptionPane.showMessageDialog(null, "Ürün Güncellendi");
                //yazılan metinleri temizleme
              stok_miktari.setText("");
              urun_adi.setText("");
              urun_alis_fiyati.setText("");
        } catch (Exception e) {
            //hatayı yazdırılarım
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(!urun_kodu.equals("")){
            try {
                Connection con =getConnetion();
        PreparedStatement ps=con.prepareStatement("Delete From stok where urun_kodu=?");
        int urunK=Integer.parseInt(urun_kodu.getText());
        ps.setInt(1, urunK);
        ps.executeUpdate();
        urunleri_tabloya_aktar();
        JOptionPane.showConfirmDialog(null, "Ürün Silindi");
        // daha önceki textlerin silinmesi
            urun_kodu.setText("");
            stok_miktari.setText("");
            urun_adi.setText("");
            urun_alis_fiyati.setText("");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        else{
            JOptionPane.showConfirmDialog(null, "Silinecek Ürün Kodu");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //program akışının sonlanması işlemi, çıkış yapma
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabloMouseClicked
        int index=tablo.getSelectedRow();
        try {
            urunGoster(index);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tabloMouseClicked
    boolean kontrolEt(){
        if(stok_miktari.getText()==null || urun_adi.getText()==null || urun_alis_fiyati.getText()==null || urun_alis_tarihi.getDate()==null){
            return false;
        }
        else{
            //urun alış fiyatını float olarak belirlediğimiz için float dönüşüm işlemi uygularız
            Float.parseFloat(urun_alis_fiyati.getText());
            return true;
        }
    }
    ArrayList<Sutunlar>getSutunlar(){
       ArrayList<Sutunlar>urun_listesi=new ArrayList<>();
       //veritabanı üzerinde işlemler yapabilmek için kullandığmız sınıf
       Connection con=getConnetion();
       String sorgu="SELECT * FROM stok";
       //sql  sorguların sonuçları alıyoruz statement sınıfı ile
       Statement st;
        try {
            ResultSet rs;
            st=con.createStatement();
            rs=st.executeQuery(sorgu);
        Sutunlar a;
        //verileri okuma
        while(rs.next()){
            a=new Sutunlar(rs.getInt("urun_kodu"), rs.getInt("stok_miktari"), rs.getString("urun_adi"), Float.parseFloat(rs.getString("urun_alis_fiyati")), rs.getString("urun_alis_tarihi"));
            urun_listesi.add(a);
        }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return urun_listesi;
    }
    void urunleri_tabloya_aktar(){
        try {
            ArrayList<Sutunlar>list=getSutunlar();
            //tablo üzerinde işlemler yapabilmek için kullanırız
            DefaultTableModel model =(DefaultTableModel)tablo.getModel();
            //güncelleme
            model.setRowCount(0);
            Object [] satir= new Object[5];
            for(int i=0;i<list.size();i++){
                satir[0]=list.get(i).getUrun_kodu();
                satir[1]=list.get(i).getStok_miktari();
                satir[2]=list.get(i).getUrun_adi();
                satir[3]=list.get(i).getUrun_alis_fiyati();
                satir[4]=list.get(i).getUrun_alis_tarihi();
                //tabloya ekleme
                model.addRow(satir);
                
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    void urunGoster(int index){
        try {
    urun_kodu.setText(Integer.toString(getSutunlar().get(index).getUrun_kodu()));
    stok_miktari.setText(Integer.toString(getSutunlar().get(index).getStok_miktari()));
    urun_adi.setText(getSutunlar().get(index).getUrun_adi());
    urun_alis_fiyati.setText(Float.toString(getSutunlar().get(index).getUrun_alis_fiyati()));
    Date tarih=new SimpleDateFormat("dd-MM-yyyy").parse((String)getSutunlar().get(index).getUrun_alis_tarihi());
    urun_alis_tarihi.setDate(tarih);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StokUygulamasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StokUygulamasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StokUygulamasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StokUygulamasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StokUygulamasi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField stok_miktari;
    private javax.swing.JTable tablo;
    private javax.swing.JTextField urun_adi;
    private javax.swing.JTextField urun_alis_fiyati;
    private com.toedter.calendar.JDateChooser urun_alis_tarihi;
    private javax.swing.JTextField urun_kodu;
    // End of variables declaration//GEN-END:variables
}
